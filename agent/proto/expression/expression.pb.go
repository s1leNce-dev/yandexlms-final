// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/expression.proto

package expression

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Сообщение с одной задачей
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Expression    string                 `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	OperationTime uint32                 `protobuf:"varint,3,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_expression_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *Task) GetOperationTime() uint32 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

// Пустое сообщение для GetTask
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_expression_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{1}
}

// Ответ на GetTask
type GetTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	mi := &file_proto_expression_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{2}
}

func (x *GetTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// Запрос для отправки результата
type SubmitTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Result        float64                `protobuf:"fixed64,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskRequest) Reset() {
	*x = SubmitTaskRequest{}
	mi := &file_proto_expression_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskRequest) ProtoMessage() {}

func (x *SubmitTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskRequest.ProtoReflect.Descriptor instead.
func (*SubmitTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitTaskRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubmitTaskRequest) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

// Ответ на SubmitTask
type SubmitTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskResponse) Reset() {
	*x = SubmitTaskResponse{}
	mi := &file_proto_expression_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskResponse) ProtoMessage() {}

func (x *SubmitTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskResponse.ProtoReflect.Descriptor instead.
func (*SubmitTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_expression_proto protoreflect.FileDescriptor

const file_proto_expression_proto_rawDesc = "" +
	"\n" +
	"\x16proto/expression.proto\x12\vexpressions\"\\\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1e\n" +
	"\n" +
	"expression\x18\x02 \x01(\tR\n" +
	"expression\x12$\n" +
	"\roperationTime\x18\x03 \x01(\rR\roperationTime\"\a\n" +
	"\x05Empty\"8\n" +
	"\x0fGetTaskResponse\x12%\n" +
	"\x04task\x18\x01 \x01(\v2\x11.expressions.TaskR\x04task\";\n" +
	"\x11SubmitTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x16\n" +
	"\x06result\x18\x02 \x01(\x01R\x06result\".\n" +
	"\x12SubmitTaskResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\x9f\x01\n" +
	"\vTaskService\x12;\n" +
	"\aGetTask\x12\x12.expressions.Empty\x1a\x1c.expressions.GetTaskResponse\x12S\n" +
	"\x10SubmitTaskResult\x12\x1e.expressions.SubmitTaskRequest\x1a\x1f.expressions.SubmitTaskResponseB\rZ\vexpression/b\x06proto3"

var (
	file_proto_expression_proto_rawDescOnce sync.Once
	file_proto_expression_proto_rawDescData []byte
)

func file_proto_expression_proto_rawDescGZIP() []byte {
	file_proto_expression_proto_rawDescOnce.Do(func() {
		file_proto_expression_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_expression_proto_rawDesc), len(file_proto_expression_proto_rawDesc)))
	})
	return file_proto_expression_proto_rawDescData
}

var file_proto_expression_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_expression_proto_goTypes = []any{
	(*Task)(nil),               // 0: expressions.Task
	(*Empty)(nil),              // 1: expressions.Empty
	(*GetTaskResponse)(nil),    // 2: expressions.GetTaskResponse
	(*SubmitTaskRequest)(nil),  // 3: expressions.SubmitTaskRequest
	(*SubmitTaskResponse)(nil), // 4: expressions.SubmitTaskResponse
}
var file_proto_expression_proto_depIdxs = []int32{
	0, // 0: expressions.GetTaskResponse.task:type_name -> expressions.Task
	1, // 1: expressions.TaskService.GetTask:input_type -> expressions.Empty
	3, // 2: expressions.TaskService.SubmitTaskResult:input_type -> expressions.SubmitTaskRequest
	2, // 3: expressions.TaskService.GetTask:output_type -> expressions.GetTaskResponse
	4, // 4: expressions.TaskService.SubmitTaskResult:output_type -> expressions.SubmitTaskResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_expression_proto_init() }
func file_proto_expression_proto_init() {
	if File_proto_expression_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_expression_proto_rawDesc), len(file_proto_expression_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_expression_proto_goTypes,
		DependencyIndexes: file_proto_expression_proto_depIdxs,
		MessageInfos:      file_proto_expression_proto_msgTypes,
	}.Build()
	File_proto_expression_proto = out.File
	file_proto_expression_proto_goTypes = nil
	file_proto_expression_proto_depIdxs = nil
}
